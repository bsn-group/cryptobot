version: '3.8'

services:

  db:
    image: postgres:13.2-alpine
    container_name: db
    restart: unless-stopped
    env_file:
      - ./bsnbot.env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  logging:
    image: datalust/seq:2021.2
    container_name: logging
    restart: unless-stopped
    environment:
      ACCEPT_EULA: Y
    volumes:
      - type: volume
        source: app-logs
        target: /data
    ports:
      - 5341:80
    # healthcheck: # no curl in image
    #   test: ["CMD", "curl", "-f", "http://localhost:5341"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  dbupdate:
    image: bsngroup/trader:${trader_version}
    container_name: dbupdate
    env_file:
      - ./bsnbot.env
    environment:
      DbAdminConnection: "${connectionString}"
      Serilog__WriteTo__1__Args__ServerUrl: "http://logging:5341"
      STARTUP_DLL: Crypto.Database.Upgrade.dll
    working_dir: /app/Crypto.Database.Upgrade
    depends_on: 
      db:
        condition: service_healthy
      
  trader:
    image: bsngroup/trader:${trader_version}
    container_name: trader
    restart: unless-stopped
    env_file:
      - ./bsnbot.env
    environment:
      ConnectionStrings__PostgresConnection: "${connectionString}"
      Serilog__WriteTo__1__Args__ServerUrl: "http://logging:5341"
      STARTUP_DLL: Crypto.Trader.dll
      cli_args: ${trader_cli_args}
    working_dir: /app/Crypto.Trader
    depends_on: 
      db:
        condition: service_healthy
    ports:
      - 5000:5000

  analyzer:
    image: bsngroup/analyzer:${analyzer_version}
    container_name: analyzer
    restart: unless-stopped
    env_file:
      - ./bsnbot.env
    depends_on: 
      db:
        condition: service_healthy
    ports:
      - 8090:8090
      
  ui:
    image: bsngroup/cryptobot-ui:${ui_version}
    container_name: ui
    restart: unless-stopped
    env_file:
      - ./bsnbot.env
    environment:  
      ConnectionStrings__cryptodbConnection: "${connectionString}"
    depends_on: 
      db:
        condition: service_healthy
    ports:
      - 5050:5000 

volumes:
  db-data:
  app-logs:

    